{
  "name": "api-key-aggregetor",
  "displayName": "Gemini API Key Aggregator Proxy",
  "description": "Aggregates multiple Google Gemini API keys with Serverless multi-IP distribution support to bypass rate limits and improve concurrency for VS Code extensions like Cline and Roo Code.",
  "version": "1.0.0",
  "publisher": "ShaneYang",
  "engines": {
    "vscode": "^1.97.0"
  },
  "categories": [
    "Other",
    "Programming Languages",
    "AI"
  ],
  "keywords": [
    "Gemini",
    "API Key",
    "Aggregator",
    "Proxy",
    "Cline",
    "Roo Code",
    "Continue",
    "Rate Limit",
    "Concurrency"
  ],
  "activationEvents": [
    "onCommand:geminiAggregator.runserver",
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "geminiAggregator.runserver",
        "title": "Run Server"
      },
      {
        "command": "geminiAggregator.addApiKey",
        "title": "Gemini: Add API Key"
      },
      {
        "command": "geminiAggregator.listApiKeys",
        "title": "Gemini: List API Keys"
      },
      {
        "command": "geminiAggregator.modifyApiKey",
        "title": "Gemini: Modify API Key"
      },
      {
        "command": "geminiAggregator.deleteApiKey",
        "title": "Gemini: Delete API Key"
      },
      {
        "command": "geminiAggregator.addServerlessInstance",
        "title": "Gemini: Add Serverless Instance"
      },
      {
        "command": "geminiAggregator.removeServerlessInstance",
        "title": "Gemini: Remove Serverless Instance"
      },
      {
        "command": "geminiAggregator.listServerlessInstances",
        "title": "Gemini: List Serverless Instances"
      },
      {
        "command": "geminiAggregator.setDeploymentMode",
        "title": "Gemini: Set Deployment Mode"
      },
      {
        "command": "geminiAggregator.bindApiKeyToInstance",
        "title": "Gemini: Bind API Key to Instance"
      },
      {
        "command": "geminiAggregator.unbindApiKey",
        "title": "Gemini: Unbind API Key"
      },
      {
        "command": "geminiAggregator.showStatus",
        "title": "Gemini: Show Status"
      },
      {
        "command": "geminiAggregator.openConfigPanel",
        "title": "Gemini: Open Configuration Panel"
      },
      {
        "command": "geminiAggregator.networkDiagnostics",
        "title": "Gemini: Network Diagnostics"
      }
    ],
    "configuration": {
      "title": "Gemini API Key Aggregator Configuration",
      "properties": {
        "geminiAggregator.port": {
          "type": "number",
          "default": 3145,
          "description": "Port to be used by the proxy server."
        },
        "geminiAggregator.deploymentMode": {
          "type": "string",
          "enum": ["local", "serverless", "hybrid"],
          "default": "local",
          "description": "Deployment mode: local (current behavior), serverless (pure serverless forwarding), or hybrid (serverless with local fallback)."
        },
        "geminiAggregator.serverlessInstances": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier for the serverless instance"
              },
              "name": {
                "type": "string",
                "description": "User-friendly name for the instance"
              },
              "url": {
                "type": "string",
                "description": "URL endpoint of the serverless instance"
              },
              "region": {
                "type": "string",
                "description": "Deployment region (optional)"
              }
            },
            "required": ["id", "name", "url"]
          },
          "default": [],
          "description": "List of configured serverless instances for request forwarding."
        },
        "geminiAggregator.fallbackToLocal": {
          "type": "boolean",
          "default": true,
          "description": "Whether to fallback to local processing when serverless instances are unavailable."
        },
        "geminiAggregator.requestTimeout": {
          "type": "number",
          "default": 180000,
          "description": "Request timeout in milliseconds for serverless forwarding."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:vscode": "vscode-test"
  },
  "devDependencies": {
    "@types/express": "^5.0.1",
    "@types/jest": "^30.0.0",
    "@types/node": "20.x",
    "@types/vscode": "^1.97.0",
    "@typescript-eslint/eslint-plugin": "^8.28.0",
    "@typescript-eslint/parser": "^8.28.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "eslint": "^9.23.0",
    "jest": "^30.0.4",
    "ts-jest": "^29.4.0",
    "typescript": "^5.8.2"
  },
  "dependencies": {
    "@google/generative-ai": "^0.15.0",
    "dotenv": "^16.4.5",
    "express": "^4.19.2",
    "pino": "^9.2.0",
    "pino-http": "^10.1.0",
    "pino-pretty": "^11.2.1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/JamzYang/api-key-aggregetor"
  }
}
